{"mappings":"C,A,WIAA,SAAS,EAAqB,CAAG,CAAE,CAAG,EAC9B,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CFDA,SAAS,EAAqB,CAAG,EAC7B,OAAO,ACJX,SAA8B,CAAG,EAC7B,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,EDEgC,IAAQ,AGNxC,SAA4B,CAAI,EAC5B,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EHE2D,IAAQ,AKJnE,SAAwC,CAAC,CAAE,CAAM,EAC7C,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAFhB,KAAA,GAIvC,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EARlE,KAAA,GAS3C,ELLkG,IAAQ,AIN1G,WACI,MAAM,AAAI,UAAU,uIACxB,GJKA,C,I,E,C,EDHM,EAAO,GOgFb,CAAA,EA7EA,eEIoC,EFJ9B,SAAA,IAgBF,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAe,CACb,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,EArBC,ACPN,SAA2B,CAAQ,CAAE,CAAW,EAC5C,GAAI,CAAE,CAAA,aAAoB,CAAA,EAAc,MAAM,AAAI,UAAU,oCAChE,EDKM,IAAA,CAAA,GAwBF,QAAQ,GAAG,CAAC,GAEZ,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,KAAK,CAAG,C,CA3BX,OEI8B,EFJ9B,C,CA8BJ,IAAA,WAAA,MAAA,WAAY,C,E,CACZ,IAAA,YAAA,MAAA,WAAa,C,E,CACb,IAAA,SAAA,MAAA,WAAU,C,E,CACV,IAAA,WAAA,MAAA,WAAY,C,E,CAKZ,IAAA,WAAA,MAAA,WAAY,C,E,CAKZ,IAAA,WAAA,MAAA,WAAY,C,E,CAYZ,IAAA,YAAA,MAAA,WAAa,C,E,CAKb,IAAA,QAAA,MAAA,WAAS,C,E,CAKT,IAAA,UAAA,MAAA,WAAW,C,E,CAIX,IAAA,kBAAA,MAAA,WAAmB,C,E,CACnB,IAAA,YAAA,MAAA,WAAa,C,E,CACb,IAAA,UAAA,MAAA,WAAW,C,E,CACX,IAAA,gBAAA,MAAA,WAAiB,C,E,CACjB,IAAA,YAAA,MAAA,WAAa,C,E,CACb,IAAA,WAAA,MAAA,WAAY,C,E,CErEM,AAZpB,SAA2B,CAAM,CAAE,CAAK,EACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACnC,IAAI,EAAa,CAAK,CAAC,EAAE,AACzB,CAAA,EAAW,UAAU,CAAG,EAAW,UAAU,EAAI,CAAA,EACjD,EAAW,YAAY,CAAG,CAAA,EAEtB,UAAW,GAAY,CAAA,EAAW,QAAQ,CAAG,CAAA,CAAjD,EAEA,OAAO,cAAc,CAAC,EAAQ,EAAW,GAAG,CAAE,EAClD,CACJ,EAEsC,AFLhC,EEK4C,SAAS,CAAE,GFLvD,C,GA6EN,EP/EM,EAAc,SAAS,aAAa,CAAC,WACrC,EAAQ,SAAS,aAAa,CAAC,eAC/B,EAAe,SAAS,aAAa,CACzC,qCAEI,EAAa,SAAS,aAAa,CAAC,qCACpC,EAAc,SAAS,aAAa,CAAC,oCAG3C,CAAA,EAAK,SAAS,CAAC,QAAQ,CAAG,WAIxB,OAFA,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,EAEf,IAAI,CAAC,KAAK,AACnB,EAEA,EAAK,SAAS,CAAC,QAAQ,CAAG,WACxB,OAAO,IAAI,CAAC,KAAK,AACnB,EAEA,EAAK,SAAS,CAAC,SAAS,CAAG,kBACzB,AAAI,IAAI,CAAC,KAAK,GAAK,EAAK,SAAS,CAAC,YAAY,CACrC,QAGT,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAC,CAApB,EACE,GAAI,EAAK,QAAQ,CAAC,MAChB,MAAO,KAEX,GAEI,AAAC,IAAI,CAAC,QAAQ,IAAM,AAAgC,IAAhC,IAAI,CAAC,aAAa,GAAG,MAAM,EAI5C,UAHE,MAIX,EAEA,EAAK,SAAS,CAAC,QAAQ,CAAG,WAIxB,IAAK,I,E,I,CAHD,EAAY,CAAA,EACV,EAAU,CAAC,CAAA,EAAM,CAAA,EAAM,CAAA,EAAM,CAAA,EAAK,CAE/B,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,KAAvC,A,S,C,EAIE,IAAK,IAHC,EAAW,AAAA,EAAG,EAAK,KAAK,CAAC,EAAE,EAC7B,EAAM,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,SAAC,CAAhC,EAAwC,OAAA,AAAQ,IAAR,C,GAE/B,EAAI,EAAG,EAAI,EAAI,MAAM,CAAG,EAAG,IAC9B,CAAG,CAAC,EAAE,GAAK,CAAG,CAAC,EAAI,EAAE,GACvB,CAAG,CAAC,EAAE,EAAI,EACV,CAAG,CAAC,EAAI,EAAE,CAAG,EACb,EAAK,KAAK,EAAI,CAAG,CAAC,EAAE,CACpB,EAAY,CAAA,GAMhB,IAFA,EAAM,EAAI,MAAM,CAAC,SAAC,CAAlB,EAA0B,OAAA,AAAQ,IAAR,C,GAEnB,EAAI,MAAM,CAAG,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,EACtC,EAAI,IAAI,CAAC,GAGP,EAAI,KAAK,CAAC,SAAC,CAAA,CAAO,CAAA,CAAO,CAA7B,EAAuC,OAAA,IAAU,CAAO,CAAC,EAAM,AAC7D,IAAA,CAAA,CAAO,CAAC,EAAE,CAAG,CAAA,CAAb,EAGF,EAAK,KAAK,CAAC,EAAE,CAAG,CAClB,EAxBA,GA0BI,CAAA,GAAa,EAAQ,QAAQ,CAAC,CAAA,EAAA,IAChC,IAAI,CAAC,SAAS,GACd,IAAI,CAAC,QAAQ,IAGf,IAAI,CAAC,QAAQ,EACf,EAEA,EAAK,SAAS,CAAC,SAAS,CAAG,WAIzB,IAAK,I,E,I,CAHD,EAAY,CAAA,EACV,EAAU,CAAC,CAAA,EAAM,CAAA,EAAM,CAAA,EAAM,CAAA,EAAK,CAE/B,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,KAAvC,A,S,C,EAIE,IAAK,IAHC,EAAW,AAAA,EAAG,EAAK,KAAK,CAAC,EAAE,EAC7B,EAAM,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,SAAC,CAAhC,EAAwC,OAAA,AAAQ,IAAR,C,GAE/B,EAAI,EAAI,MAAM,CAAG,EAAG,EAAI,EAAG,IAC9B,CAAG,CAAC,EAAE,GAAK,CAAG,CAAC,EAAI,EAAE,GACvB,CAAG,CAAC,EAAE,EAAI,EACV,CAAG,CAAC,EAAI,EAAE,CAAG,EACb,EAAY,CAAA,EACZ,EAAK,KAAK,EAAI,CAAG,CAAC,EAAE,EAMxB,IAFA,EAAM,EAAI,MAAM,CAAC,SAAC,CAAlB,EAA0B,OAAA,AAAQ,IAAR,C,GAEnB,EAAI,MAAM,CAAG,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,EACtC,EAAI,OAAO,CAAC,GAGV,EAAI,KAAK,CAAC,SAAC,CAAA,CAAO,CAAA,CAAO,CAA7B,EAAuC,OAAA,IAAU,CAAO,CAAC,EAAM,AAC7D,IAAA,CAAA,CAAO,CAAC,EAAE,CAAG,CAAA,CAAb,EAGF,EAAK,KAAK,CAAC,EAAE,CAAG,CAClB,EAxBA,GA0BI,CAAA,GAAa,EAAQ,QAAQ,CAAC,CAAA,EAAA,IAChC,IAAI,CAAC,SAAS,GACd,IAAI,CAAC,QAAQ,IAGf,IAAI,CAAC,QAAQ,EACf,EAEA,EAAK,SAAS,CAAC,MAAM,CAAG,WAItB,IAAK,I,E,I,CAHD,EAAY,CAAA,EACV,EAAU,CAAC,CAAA,EAAM,CAAA,EAAM,CAAA,EAAM,CAAA,EAAK,CAE/B,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,KAAvC,A,S,C,EAGE,IAAK,IAFD,EAAS,EAAE,CAEN,EAAI,EAAG,EAAI,EAAK,KAAK,CAAC,MAAM,CAAE,IACrC,EAAO,IAAI,CAAC,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EAH9B,IAMM,EAAc,AAAA,EAAG,GAEvB,EAAS,EAAO,MAAM,CAAC,SAAC,CAAxB,EAAgC,OAAA,AAAQ,IAAR,C,GAEhC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,MAAM,CAAG,EAAG,IACjC,CAAM,CAAC,EAAE,GAAK,CAAM,CAAC,EAAI,EAAE,GAC7B,CAAM,CAAC,EAAE,EAAI,EACb,CAAM,CAAC,EAAI,EAAE,CAAG,EAChB,EAAK,KAAK,EAAI,CAAM,CAAC,EAAE,CACvB,EAAY,CAAA,GAMhB,IAFA,EAAS,EAAO,MAAM,CAAC,SAAC,CAAxB,EAAgC,OAAA,AAAQ,IAAR,C,GAEzB,EAAO,MAAM,CAAG,EAAK,KAAK,CAAC,MAAM,EACtC,EAAO,IAAI,CAAC,GAGV,EAAO,KAAK,CAAC,SAAC,CAAA,CAAO,CAAA,CAAO,CAAhC,EAA0C,OAAA,IAAU,CAAU,CAAC,EAAM,AACnE,IAAA,CAAA,CAAO,CAAC,EAAE,CAAG,CAAA,CAAb,EAGF,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,KAAK,CAAC,MAAM,CAAE,IACrC,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,CAAM,CAAC,EAAE,AAEhC,EAjCA,GAmCI,CAAA,GAAa,EAAQ,QAAQ,CAAC,CAAA,EAAA,IAChC,IAAI,CAAC,SAAS,GACd,IAAI,CAAC,QAAQ,IAGf,IAAI,CAAC,QAAQ,EACf,EAEA,EAAK,SAAS,CAAC,QAAQ,CAAG,WAIxB,IAAK,I,E,I,CAHD,EAAY,CAAA,EACV,EAAU,CAAC,CAAA,EAAM,CAAA,EAAM,CAAA,EAAM,CAAA,EAAK,CAE/B,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,KAAvC,A,S,C,EAGE,IAAK,IAFD,EAAS,EAAE,CAEN,EAAI,EAAG,EAAI,EAAK,KAAK,CAAC,MAAM,CAAE,IACrC,EAAO,IAAI,CAAC,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EAH9B,IAMM,EAAc,AAAA,EAAG,GAEvB,EAAS,EAAO,MAAM,CAAC,SAAC,CAAxB,EAAgC,OAAA,AAAQ,IAAR,C,GAEhC,IAAK,IAAI,EAAI,EAAO,MAAM,CAAG,EAAG,EAAI,EAAG,IACjC,CAAM,CAAC,EAAE,GAAK,CAAM,CAAC,EAAI,EAAE,GAC7B,CAAM,CAAC,EAAE,EAAI,EACb,CAAM,CAAC,EAAI,EAAE,CAAG,EAChB,EAAY,CAAA,EACZ,EAAK,KAAK,EAAI,CAAM,CAAC,EAAE,EAM3B,IAFA,EAAS,EAAO,MAAM,CAAC,SAAC,CAAxB,EAAgC,OAAA,AAAQ,IAAR,C,GAEzB,EAAO,MAAM,CAAG,EAAK,KAAK,CAAC,MAAM,EACtC,EAAO,OAAO,CAAC,GAGb,EAAO,KAAK,CAAC,SAAC,CAAA,CAAO,CAAzB,EAAmC,OAAA,IAAU,CAAU,CAAC,EAAM,AAC5D,IAAA,CAAA,CAAO,CAAC,EAAE,CAAG,CAAA,CAAb,EAGF,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,KAAK,CAAC,MAAM,CAAE,IACrC,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,CAAM,CAAC,EAAE,EAAI,CAEpC,EAjCA,GAmCI,CAAA,GAAa,EAAQ,QAAQ,CAAC,CAAA,EAAA,IAChC,IAAI,CAAC,SAAS,GACd,IAAI,CAAC,QAAQ,IAGf,IAAI,CAAC,QAAQ,EACf,EAEA,EAAK,SAAS,CAAC,OAAO,CAAG,WACvB,IAAI,CAAC,KAAK,CAAG,CACX,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,CACD,EAAY,SAAS,CAAG,eACxB,EAAY,SAAS,CAAG,QACxB,IAAI,CAAC,KAAK,CAAG,EACb,EAAM,SAAS,CAAG,IAAI,CAAC,KAAK,CAC5B,IAAI,CAAC,SAAS,GAEd,EAAa,SAAS,CAAG,wBACzB,EAAW,SAAS,CAAG,6BACvB,EAAY,SAAS,CAAG,6BAC1B,EAEA,EAAK,SAAS,CAAC,eAAe,CAAG,WAI/B,MAAO,AAHmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,AAGhC,CAFD,KAAK,KAAK,CAAC,AAAgB,GAAhB,KAAK,MAAM,IAEL,AAC1C,EAEA,EAAK,SAAS,CAAC,SAAS,CAAG,WACzB,GAAI,AAAgC,IAAhC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAQ,CACrC,IAAM,EAAiB,IAAI,CAAC,aAAa,GACnC,EAAkB,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAe,MAAM,EAClE,EAAkB,CAAc,CAAC,EAAgB,AAEvD,CAAA,IAAI,CAAC,KAAK,CAAC,CAAe,CAAC,EAAE,CAAC,CAAC,CAAe,CAAC,EAAE,CAAC,CAAG,IAAI,CAAC,eAAe,EAC3E,CACF,EAEA,EAAK,SAAS,CAAC,QAAQ,CAAG,WACxB,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,GACE,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,GACxB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,EAMzC,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,GACxB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,IAAI,CAAC,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CALzC,MAAO,CAAA,EAYb,MAAO,CAAA,CACT,EAEA,EAAK,SAAS,CAAC,aAAa,CAAG,WAG7B,IAAK,IAFC,EAAkB,EAAE,CAEjB,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACf,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAClB,EAAgB,IAAI,CAAC,CAAC,EAAG,EAAE,EAKjC,OAAO,CACT,EAEA,EAAK,SAAS,CAAC,KAAK,CAAG,WACjB,IAAI,CAAC,aAAa,GAAG,MAAM,GAAK,KAAA,GAAA,CAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAI,KACvD,IAAI,CAAC,SAAS,GACd,IAAI,CAAC,SAAS,GACd,IAAI,CAAC,SAAS,GACd,IAAI,CAAC,QAAQ,GACb,EAAa,SAAS,CAAG,+BAE7B,EAEA,EAAK,SAAS,CAAC,SAAS,CAAG,WAIzB,IAAK,IAFC,EAAa,AADL,SAAS,aAAa,CAAC,eACZ,gBAAgB,CAAC,eAEjC,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IAAK,CAC7C,IAAM,EAAW,AAAI,EAAJ,EAAQ,CAEA,CAAA,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAClB,CAAU,CAAC,EAAS,CAAC,SAAS,CAAG,aACjC,CAAU,CAAC,EAAS,CAAC,SAAS,CAAG,IAGV,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAClB,CAAU,CAAC,EAAS,CAAC,SAAS,CAC5B,0BAA2C,MAAA,CAAjB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAC5C,CAAU,CAAC,EAAS,CAAC,SAAS,CAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAErD,CAEJ,EAEA,EAAK,SAAS,CAAC,YAAY,CAAG,WACxB,AAAqB,SAArB,IAAI,CAAC,SAAS,IAChB,EAAY,SAAS,CAAG,eACxB,EAAY,SAAS,CAAG,SACf,IAAI,CAAC,aAAa,GAAG,MAAM,GAAK,KAAA,GAAA,CAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAI,KAC9D,EAAY,SAAS,CAAG,iBACxB,EAAY,SAAS,CAAG,UAE5B,EAEA,EAAK,SAAS,CAAC,QAAQ,CAAG,WACxB,IAAI,CAAC,YAAY,GACjB,IAAI,CAAC,SAAS,GACd,EAAM,SAAS,CAAG,IAAI,CAAC,KAAK,CAEH,QAArB,IAAI,CAAC,SAAS,IAChB,CAAA,EAAW,SAAS,CAAG,qBADzB,EAIyB,SAArB,IAAI,CAAC,SAAS,IAChB,CAAA,EAAY,SAAS,CAAG,sBAD1B,CAGF,EAEA,EAAY,gBAAgB,CAAC,QAAS,WACN,iBAA1B,EAAY,SAAS,EACvB,EAAK,KAAK,GAGkB,mBAA1B,EAAY,SAAS,EACvB,EAAK,OAAO,EAEhB,GAEA,OAAO,gBAAgB,CAAC,UAExB,SAAyB,CAAG,EACV,cAAZ,EAAI,GAAG,EACT,EAAK,QAAQ,GAGC,eAAZ,EAAI,GAAG,EACT,EAAK,SAAS,GAGA,YAAZ,EAAI,GAAG,EACT,EAAK,MAAM,GAGG,cAAZ,EAAI,GAAG,EACT,EAAK,QAAQ,GAGf,EAAK,SAAS,EAChB,EApBoD,CAAA,E","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        // eslint-disable-next-line no-console\n        console.log(initialState);\n        this.state = initialState;\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {}\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {}\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {}\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {}\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {}\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {}\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {}\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {}\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {}\n        },\n        {\n            // Add your own methods here\n            key: \"getRandomNumber\",\n            value: function getRandomNumber() {}\n        },\n        {\n            key: \"addNumber\",\n            value: function addNumber() {}\n        },\n        {\n            key: \"canMove\",\n            value: function canMove() {}\n        },\n        {\n            key: \"getEmptyCells\",\n            value: function getEmptyCells() {}\n        },\n        {\n            key: \"fillCells\",\n            value: function fillCells() {}\n        },\n        {\n            key: \"moveUtil\",\n            value: function moveUtil() {}\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-container p:nth-child(3)\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-container p:nth-child(2)\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-container p:nth-child(1)\");\n// Write your code here\n$3d28d7f1aac198f5$exports.prototype.getState = function() {\n    // eslint-disable-next-line no-console\n    console.log(this.state);\n    return this.state;\n};\n$3d28d7f1aac198f5$exports.prototype.getScore = function() {\n    return this.score;\n};\n$3d28d7f1aac198f5$exports.prototype.getStatus = function() {\n    if (this.state === $3d28d7f1aac198f5$exports.prototype.initialState) return \"idle\";\n    this.state.forEach(function(line) {\n        if (line.includes(2048)) return \"win\";\n    });\n    if (!this.canMerge() && this.getEmptyCells().length === 0) return \"lose\";\n    return \"playing\";\n};\n$3d28d7f1aac198f5$exports.prototype.moveLeft = function() {\n    var _this = this, _loop = function(i) {\n        var rowCopy = (0, $227c6742e0ff6f82$export$71511d61b312f219)(_this.state[i]);\n        var row = _this.state[i].filter(function(num) {\n            return num !== 0;\n        });\n        for(var j = 0; j < row.length - 1; j++)if (row[j] === row[j + 1]) {\n            row[j] *= 2;\n            row[j + 1] = 0;\n            _this.score += row[j];\n            wasMerged = true;\n        }\n        row = row.filter(function(num) {\n            return num !== 0;\n        });\n        while(row.length < _this.state[i].length)row.push(0);\n        if (row.every(function(value, index, array) {\n            return value === rowCopy[index];\n        })) canMove[i] = false;\n        _this.state[i] = row;\n    };\n    var wasMerged = false;\n    var canMove = [\n        true,\n        true,\n        true,\n        true\n    ];\n    for(var i = 0; i < this.state.length; i++)_loop(i);\n    if (wasMerged || canMove.includes(true)) {\n        this.addNumber();\n        this.getState();\n    }\n    this.moveUtil();\n};\n$3d28d7f1aac198f5$exports.prototype.moveRight = function() {\n    var _this = this, _loop = function(i) {\n        var rowCopy = (0, $227c6742e0ff6f82$export$71511d61b312f219)(_this.state[i]);\n        var row = _this.state[i].filter(function(num) {\n            return num !== 0;\n        });\n        for(var j = row.length - 1; j > 0; j--)if (row[j] === row[j - 1]) {\n            row[j] *= 2;\n            row[j - 1] = 0;\n            wasMerged = true;\n            _this.score += row[j];\n        }\n        row = row.filter(function(num) {\n            return num !== 0;\n        });\n        while(row.length < _this.state[i].length)row.unshift(0);\n        if (row.every(function(value, index, array) {\n            return value === rowCopy[index];\n        })) canMove[i] = false;\n        _this.state[i] = row;\n    };\n    var wasMerged = false;\n    var canMove = [\n        true,\n        true,\n        true,\n        true\n    ];\n    for(var i = 0; i < this.state.length; i++)_loop(i);\n    if (wasMerged || canMove.includes(true)) {\n        this.addNumber();\n        this.getState();\n    }\n    this.moveUtil();\n};\n$3d28d7f1aac198f5$exports.prototype.moveUp = function() {\n    var _this = this, _loop = function(j) {\n        var column = [];\n        for(var i = 0; i < _this.state.length; i++)column.push(_this.state[i][j]);\n        var columnCopy = (0, $227c6742e0ff6f82$export$71511d61b312f219)(column);\n        column = column.filter(function(num) {\n            return num !== 0;\n        });\n        for(var i1 = 0; i1 < column.length - 1; i1++)if (column[i1] === column[i1 + 1]) {\n            column[i1] *= 2;\n            column[i1 + 1] = 0;\n            _this.score += column[i1];\n            wasMerged = true;\n        }\n        column = column.filter(function(num) {\n            return num !== 0;\n        });\n        while(column.length < _this.state.length)column.push(0);\n        if (column.every(function(value, index, array) {\n            return value === columnCopy[index];\n        })) canMove[j] = false;\n        for(var i2 = 0; i2 < _this.state.length; i2++)_this.state[i2][j] = column[i2];\n    };\n    var wasMerged = false;\n    var canMove = [\n        true,\n        true,\n        true,\n        true\n    ];\n    for(var j = 0; j < this.state.length; j++)_loop(j);\n    if (wasMerged || canMove.includes(true)) {\n        this.addNumber();\n        this.getState();\n    }\n    this.moveUtil();\n};\n$3d28d7f1aac198f5$exports.prototype.moveDown = function() {\n    var _this = this, _loop = function(j) {\n        var column = [];\n        for(var i = 0; i < _this.state.length; i++)column.push(_this.state[i][j]);\n        var columnCopy = (0, $227c6742e0ff6f82$export$71511d61b312f219)(column);\n        column = column.filter(function(num) {\n            return num !== 0;\n        });\n        for(var i1 = column.length - 1; i1 > 0; i1--)if (column[i1] === column[i1 - 1]) {\n            column[i1] *= 2;\n            column[i1 - 1] = 0;\n            wasMerged = true;\n            _this.score += column[i1];\n        }\n        column = column.filter(function(num) {\n            return num !== 0;\n        });\n        while(column.length < _this.state.length)column.unshift(0);\n        if (column.every(function(value, index) {\n            return value === columnCopy[index];\n        })) canMove[j] = false;\n        for(var i2 = 0; i2 < _this.state.length; i2++)_this.state[i2][j] = column[i2] || 0;\n    };\n    var wasMerged = false;\n    var canMove = [\n        true,\n        true,\n        true,\n        true\n    ];\n    for(var j = 0; j < this.state.length; j++)_loop(j);\n    if (wasMerged || canMove.includes(true)) {\n        this.addNumber();\n        this.getState();\n    }\n    this.moveUtil();\n};\n$3d28d7f1aac198f5$exports.prototype.restart = function() {\n    this.state = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    $197cd56b15c33885$var$startButton.className = \"button start\";\n    $197cd56b15c33885$var$startButton.innerHTML = \"Start\";\n    this.score = 0;\n    $197cd56b15c33885$var$score.innerHTML = this.score;\n    this.fillCells();\n    $197cd56b15c33885$var$messageStart.className = \"message message-start\";\n    $197cd56b15c33885$var$messageWin.className = \"message message-win hidden\";\n    $197cd56b15c33885$var$messageLose.className = \"message message-lose hidden\";\n};\n$3d28d7f1aac198f5$exports.prototype.getRandomNumber = function() {\n    var randomNumbersPool = [\n        2,\n        2,\n        2,\n        2,\n        2,\n        2,\n        2,\n        2,\n        2,\n        4\n    ];\n    var randomNumIndex = Math.floor(Math.random() * 10);\n    return randomNumbersPool[randomNumIndex];\n};\n$3d28d7f1aac198f5$exports.prototype.addNumber = function() {\n    if (this.getEmptyCells().length !== 0) {\n        var emptyCellsPool = this.getEmptyCells();\n        var randomCellIndex = Math.floor(Math.random() * emptyCellsPool.length);\n        var randomEmptyCell = emptyCellsPool[randomCellIndex];\n        this.state[randomEmptyCell[0]][randomEmptyCell[1]] = this.getRandomNumber();\n    }\n};\n$3d28d7f1aac198f5$exports.prototype.canMerge = function() {\n    for(var i = 0; i < this.state.length; i++)for(var j = 0; j < this.state.length; j++){\n        if (j < this.state.length - 1 && this.state[i][j] === this.state[i][j + 1]) return true;\n        if (i < this.state.length - 1 && this.state[i][j] === this.state[i + 1][j]) return true;\n    }\n    return false;\n};\n$3d28d7f1aac198f5$exports.prototype.getEmptyCells = function() {\n    var emptyCellsArray = [];\n    for(var i = 0; i < this.state.length; i++){\n        for(var j = 0; j < this.state[i].length; j++)if (this.state[i][j] === 0) emptyCellsArray.push([\n            i,\n            j\n        ]);\n    }\n    return emptyCellsArray;\n};\n$3d28d7f1aac198f5$exports.prototype.start = function() {\n    if (this.getEmptyCells().length === Math.pow(this.state.length, 2)) {\n        this.addNumber();\n        this.addNumber();\n        this.fillCells();\n        this.getState();\n        $197cd56b15c33885$var$messageStart.className = \"message message-start hidden\";\n    }\n};\n$3d28d7f1aac198f5$exports.prototype.fillCells = function() {\n    var table = document.querySelector(\".game-field\");\n    var tableCells = table.querySelectorAll(\".field-cell\");\n    for(var i = 0; i < this.state.length; i++)for(var j = 0; j < this.state[i].length; j++){\n        var cellndex = i * 4 + j;\n        if (this.state[i][j] === 0) {\n            tableCells[cellndex].className = \"field-cell\";\n            tableCells[cellndex].innerHTML = \"\";\n        }\n        if (this.state[i][j] !== 0) {\n            tableCells[cellndex].className = \"field-cell field-cell--\".concat(this.state[i][j]);\n            tableCells[cellndex].innerHTML = this.state[i][j];\n        }\n    }\n};\n$3d28d7f1aac198f5$exports.prototype.toggleButton = function() {\n    if (this.getStatus() === \"idle\") {\n        $197cd56b15c33885$var$startButton.className = \"button start\";\n        $197cd56b15c33885$var$startButton.innerHTML = \"Start\";\n    } else if (this.getEmptyCells().length !== Math.pow(this.state.length, 2)) {\n        $197cd56b15c33885$var$startButton.className = \"button restart\";\n        $197cd56b15c33885$var$startButton.innerHTML = \"Restart\";\n    }\n};\n$3d28d7f1aac198f5$exports.prototype.moveUtil = function() {\n    this.toggleButton();\n    this.fillCells();\n    $197cd56b15c33885$var$score.innerHTML = this.score;\n    if (this.getStatus() === \"win\") $197cd56b15c33885$var$messageWin.className = \"message message-win\";\n    if (this.getStatus() === \"lose\") $197cd56b15c33885$var$messageLose.className = \"message message-lose\";\n};\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$startButton.className === \"button start\") $197cd56b15c33885$var$game.start();\n    if ($197cd56b15c33885$var$startButton.className === \"button restart\") $197cd56b15c33885$var$game.restart();\n});\nwindow.addEventListener(\"keydown\", $197cd56b15c33885$var$checkKeyPressed, false);\nfunction $197cd56b15c33885$var$checkKeyPressed(evt) {\n    if (evt.key === \"ArrowLeft\") $197cd56b15c33885$var$game.moveLeft();\n    if (evt.key === \"ArrowRight\") $197cd56b15c33885$var$game.moveRight();\n    if (evt.key === \"ArrowUp\") $197cd56b15c33885$var$game.moveUp();\n    if (evt.key === \"ArrowDown\") $197cd56b15c33885$var$game.moveDown();\n    $197cd56b15c33885$var$game.fillCells();\n}\n\n})();\n//# sourceMappingURL=index.2f7db773.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\nconst startButton = document.querySelector('.button');\nconst score = document.querySelector('.game-score');\nconst messageStart = document.querySelector(\n  '.message-container p:nth-child(3)',\n);\nconst messageWin = document.querySelector('.message-container p:nth-child(2)');\nconst messageLose = document.querySelector('.message-container p:nth-child(1)');\n\n// Write your code here\nGame.prototype.getState = function () {\n  // eslint-disable-next-line no-console\n  console.log(this.state);\n\n  return this.state;\n};\n\nGame.prototype.getScore = function () {\n  return this.score;\n};\n\nGame.prototype.getStatus = function () {\n  if (this.state === Game.prototype.initialState) {\n    return 'idle';\n  }\n\n  this.state.forEach((line) => {\n    if (line.includes(2048)) {\n      return 'win';\n    }\n  });\n\n  if (!this.canMerge() && this.getEmptyCells().length === 0) {\n    return 'lose';\n  }\n\n  return 'playing';\n};\n\nGame.prototype.moveLeft = function () {\n  let wasMerged = false;\n  const canMove = [true, true, true, true];\n\n  for (let i = 0; i < this.state.length; i++) {\n    const rowCopy = [...this.state[i]];\n    let row = this.state[i].filter((num) => num !== 0);\n\n    for (let j = 0; j < row.length - 1; j++) {\n      if (row[j] === row[j + 1]) {\n        row[j] *= 2;\n        row[j + 1] = 0;\n        this.score += row[j];\n        wasMerged = true;\n      }\n    }\n\n    row = row.filter((num) => num !== 0);\n\n    while (row.length < this.state[i].length) {\n      row.push(0);\n    }\n\n    if (row.every((value, index, array) => value === rowCopy[index])) {\n      canMove[i] = false;\n    }\n\n    this.state[i] = row;\n  }\n\n  if (wasMerged || canMove.includes(true)) {\n    this.addNumber();\n    this.getState();\n  }\n\n  this.moveUtil();\n};\n\nGame.prototype.moveRight = function () {\n  let wasMerged = false;\n  const canMove = [true, true, true, true];\n\n  for (let i = 0; i < this.state.length; i++) {\n    const rowCopy = [...this.state[i]];\n    let row = this.state[i].filter((num) => num !== 0);\n\n    for (let j = row.length - 1; j > 0; j--) {\n      if (row[j] === row[j - 1]) {\n        row[j] *= 2;\n        row[j - 1] = 0;\n        wasMerged = true;\n        this.score += row[j];\n      }\n    }\n\n    row = row.filter((num) => num !== 0);\n\n    while (row.length < this.state[i].length) {\n      row.unshift(0);\n    }\n\n    if (row.every((value, index, array) => value === rowCopy[index])) {\n      canMove[i] = false;\n    }\n\n    this.state[i] = row;\n  }\n\n  if (wasMerged || canMove.includes(true)) {\n    this.addNumber();\n    this.getState();\n  }\n\n  this.moveUtil();\n};\n\nGame.prototype.moveUp = function () {\n  let wasMerged = false;\n  const canMove = [true, true, true, true];\n\n  for (let j = 0; j < this.state.length; j++) {\n    let column = [];\n\n    for (let i = 0; i < this.state.length; i++) {\n      column.push(this.state[i][j]);\n    }\n\n    const columnCopy = [...column];\n\n    column = column.filter((num) => num !== 0);\n\n    for (let i = 0; i < column.length - 1; i++) {\n      if (column[i] === column[i + 1]) {\n        column[i] *= 2;\n        column[i + 1] = 0;\n        this.score += column[i];\n        wasMerged = true;\n      }\n    }\n\n    column = column.filter((num) => num !== 0);\n\n    while (column.length < this.state.length) {\n      column.push(0);\n    }\n\n    if (column.every((value, index, array) => value === columnCopy[index])) {\n      canMove[j] = false;\n    }\n\n    for (let i = 0; i < this.state.length; i++) {\n      this.state[i][j] = column[i];\n    }\n  }\n\n  if (wasMerged || canMove.includes(true)) {\n    this.addNumber();\n    this.getState();\n  }\n\n  this.moveUtil();\n};\n\nGame.prototype.moveDown = function () {\n  let wasMerged = false;\n  const canMove = [true, true, true, true];\n\n  for (let j = 0; j < this.state.length; j++) {\n    let column = [];\n\n    for (let i = 0; i < this.state.length; i++) {\n      column.push(this.state[i][j]);\n    }\n\n    const columnCopy = [...column];\n\n    column = column.filter((num) => num !== 0);\n\n    for (let i = column.length - 1; i > 0; i--) {\n      if (column[i] === column[i - 1]) {\n        column[i] *= 2;\n        column[i - 1] = 0;\n        wasMerged = true;\n        this.score += column[i];\n      }\n    }\n\n    column = column.filter((num) => num !== 0);\n\n    while (column.length < this.state.length) {\n      column.unshift(0);\n    }\n\n    if (column.every((value, index) => value === columnCopy[index])) {\n      canMove[j] = false;\n    }\n\n    for (let i = 0; i < this.state.length; i++) {\n      this.state[i][j] = column[i] || 0;\n    }\n  }\n\n  if (wasMerged || canMove.includes(true)) {\n    this.addNumber();\n    this.getState();\n  }\n\n  this.moveUtil();\n};\n\nGame.prototype.restart = function () {\n  this.state = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  startButton.className = 'button start';\n  startButton.innerHTML = 'Start';\n  this.score = 0;\n  score.innerHTML = this.score;\n  this.fillCells();\n\n  messageStart.className = 'message message-start';\n  messageWin.className = 'message message-win hidden';\n  messageLose.className = 'message message-lose hidden';\n};\n\nGame.prototype.getRandomNumber = function () {\n  const randomNumbersPool = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\n  const randomNumIndex = Math.floor(Math.random() * 10);\n\n  return randomNumbersPool[randomNumIndex];\n};\n\nGame.prototype.addNumber = function () {\n  if (this.getEmptyCells().length !== 0) {\n    const emptyCellsPool = this.getEmptyCells();\n    const randomCellIndex = Math.floor(Math.random() * emptyCellsPool.length);\n    const randomEmptyCell = emptyCellsPool[randomCellIndex];\n\n    this.state[randomEmptyCell[0]][randomEmptyCell[1]] = this.getRandomNumber();\n  }\n};\n\nGame.prototype.canMerge = function () {\n  for (let i = 0; i < this.state.length; i++) {\n    for (let j = 0; j < this.state.length; j++) {\n      if (\n        j < this.state.length - 1 &&\n        this.state[i][j] === this.state[i][j + 1]\n      ) {\n        return true;\n      }\n\n      if (\n        i < this.state.length - 1 &&\n        this.state[i][j] === this.state[i + 1][j]\n      ) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nGame.prototype.getEmptyCells = function () {\n  const emptyCellsArray = [];\n\n  for (let i = 0; i < this.state.length; i++) {\n    for (let j = 0; j < this.state[i].length; j++) {\n      if (this.state[i][j] === 0) {\n        emptyCellsArray.push([i, j]);\n      }\n    }\n  }\n\n  return emptyCellsArray;\n};\n\nGame.prototype.start = function () {\n  if (this.getEmptyCells().length === this.state.length ** 2) {\n    this.addNumber();\n    this.addNumber();\n    this.fillCells();\n    this.getState();\n    messageStart.className = 'message message-start hidden';\n  }\n};\n\nGame.prototype.fillCells = function () {\n  const table = document.querySelector('.game-field');\n  const tableCells = table.querySelectorAll('.field-cell');\n\n  for (let i = 0; i < this.state.length; i++) {\n    for (let j = 0; j < this.state[i].length; j++) {\n      const cellndex = i * 4 + j;\n\n      if (this.state[i][j] === 0) {\n        tableCells[cellndex].className = 'field-cell';\n        tableCells[cellndex].innerHTML = '';\n      }\n\n      if (this.state[i][j] !== 0) {\n        tableCells[cellndex].className =\n          `field-cell field-cell--${this.state[i][j]}`;\n        tableCells[cellndex].innerHTML = this.state[i][j];\n      }\n    }\n  }\n};\n\nGame.prototype.toggleButton = function () {\n  if (this.getStatus() === 'idle') {\n    startButton.className = 'button start';\n    startButton.innerHTML = 'Start';\n  } else if (this.getEmptyCells().length !== this.state.length ** 2) {\n    startButton.className = 'button restart';\n    startButton.innerHTML = 'Restart';\n  }\n};\n\nGame.prototype.moveUtil = function () {\n  this.toggleButton();\n  this.fillCells();\n  score.innerHTML = this.score;\n\n  if (this.getStatus() === 'win') {\n    messageWin.className = 'message message-win';\n  }\n\n  if (this.getStatus() === 'lose') {\n    messageLose.className = 'message message-lose';\n  }\n};\n\nstartButton.addEventListener('click', () => {\n  if (startButton.className === 'button start') {\n    game.start();\n  }\n\n  if (startButton.className === 'button restart') {\n    game.restart();\n  }\n});\n\nwindow.addEventListener('keydown', checkKeyPressed, false);\n\nfunction checkKeyPressed(evt) {\n  if (evt.key === 'ArrowLeft') {\n    game.moveLeft();\n  }\n\n  if (evt.key === 'ArrowRight') {\n    game.moveRight();\n  }\n\n  if (evt.key === 'ArrowUp') {\n    game.moveUp();\n  }\n\n  if (evt.key === 'ArrowDown') {\n    game.moveDown();\n  }\n\n  game.fillCells();\n}\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    // eslint-disable-next-line no-console\n    console.log(initialState);\n\n    this.state = initialState;\n    this.score = 0;\n  }\n\n  moveLeft() {}\n  moveRight() {}\n  moveUp() {}\n  moveDown() {}\n\n  /**\n   * @returns {number}\n   */\n  getScore() {}\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {}\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {}\n\n  /**\n   * Starts the game.\n   */\n  start() {}\n\n  /**\n   * Resets the game.\n   */\n  restart() {}\n\n  // Add your own methods here\n\n  getRandomNumber() {}\n  addNumber() {}\n  canMove() {}\n  getEmptyCells() {}\n  fillCells() {}\n  moveUtil() {}\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$3d28d7f1aac198f5$exports","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","console","log","state","score","key","value","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$startButton","document","querySelector","$197cd56b15c33885$var$score","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","getState","getScore","getStatus","forEach","line","includes","canMerge","getEmptyCells","moveLeft","_this","wasMerged","canMove","_loop","rowCopy","row","filter","num","j","push","every","index","array","addNumber","moveUtil","moveRight","unshift","moveUp","column","columnCopy","i1","i2","moveDown","restart","className","innerHTML","fillCells","getRandomNumber","randomNumbersPool","Math","floor","random","emptyCellsPool","randomCellIndex","randomEmptyCell","emptyCellsArray","start","pow","tableCells","table","querySelectorAll","cellndex","concat","toggleButton","addEventListener","window","evt"],"version":3,"file":"index.2f7db773.js.map"}